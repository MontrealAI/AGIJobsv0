type ProtocolStats @entity {
  id: ID!
  totalJobs: Int!
  openJobs: Int!
  finalizedJobs: Int!
  totalEscrowed: BigInt!
  totalStaked: BigInt!
  totalSlashed: BigInt!
  totalValidatorVotes: Int!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
}

type Job @entity {
  id: ID!
  jobId: BigInt!
  employer: Bytes!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
  finalizedAtBlock: BigInt
  finalizedAtTimestamp: BigInt
  reward: BigInt!
  stake: BigInt!
  fee: BigInt!
  escrowed: BigInt!
  state: String!
  assignedTo: Bytes
  validatorQuorum: Int!
  approvals: Int!
  rejections: Int!
  uri: String
  specHash: Bytes
  votes: [ValidatorVote!]! @derivedFrom(field: "job")
}

type Stake @entity {
  id: ID!
  user: Bytes!
  role: String!
  currentBalance: BigInt!
  totalDeposited: BigInt!
  totalSlashed: BigInt!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
}

type StakeAggregate @entity {
  id: ID!
  role: String!
  currentBalance: BigInt!
  totalDeposited: BigInt!
  totalSlashed: BigInt!
  participantCount: Int!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
}

type Validator @entity {
  id: ID!
  address: Bytes!
  totalVotes: Int!
  totalApprovals: Int!
  totalRejections: Int!
  lastVotedAtBlock: BigInt
  lastVotedAtTimestamp: BigInt
  stake: Stake
  votes: [ValidatorVote!]! @derivedFrom(field: "validator")
}

type ValidatorVote @entity {
  id: ID!
  job: Job!
  validator: Validator!
  approved: Boolean!
  burnTxHash: Bytes
  txHash: Bytes!
  logIndex: BigInt!
  revealedAtBlock: BigInt!
  revealedAtTimestamp: BigInt!
}

type Phase6Domain @entity {
  id: ID!
  slug: String!
  name: String!
  metadataURI: String!
  subgraphEndpoint: String!
  validationModule: Bytes
  dataOracle: Bytes
  l2Gateway: Bytes
  executionRouter: Bytes
  heartbeatSeconds: Int!
  active: Boolean!
  manifestURI: String!
  agentOps: Bytes
  dataPipeline: Bytes
  credentialVerifier: Bytes
  fallbackOperator: Bytes
  controlPlaneURI: String!
  autopilotCadenceSeconds: Int!
  autopilotEnabled: Boolean!
  registeredAtBlock: BigInt!
  registeredAtTimestamp: BigInt!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
  maxActiveJobs: Int!
  maxQueueDepth: Int!
  minStake: BigInt!
  treasuryShareBps: Int!
  circuitBreakerBps: Int!
  requiresHumanValidation: Boolean!
  telemetryResilienceBps: Int!
  telemetryAutomationBps: Int!
  telemetryComplianceBps: Int!
  settlementLatencySeconds: Int!
  usesL2Settlement: Boolean!
  sentinelOracle: Bytes
  settlementAsset: Bytes
  telemetryMetricsDigest: Bytes
  telemetryManifestHash: Bytes
}

type Phase6Registry @entity {
  id: ID!
  contract: Bytes!
  controller: Bytes
  manifestHash: Bytes
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
}

type Phase6RegistryDomain @entity {
  id: ID!
  registry: Phase6Registry!
  slug: String!
  name: String!
  metadataURI: String!
  domainId: Bytes!
  manifestHash: Bytes!
  active: Boolean!
  credentialRequires: Boolean!
  credentialActive: Boolean!
  credentialAttestor: Bytes
  credentialSchema: Bytes
  credentialURI: String
  registeredAtBlock: BigInt!
  registeredAtTimestamp: BigInt!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
  skills: [Phase6RegistrySkill!]! @derivedFrom(field: "domain")
  agents: [Phase6RegistryAgent!]! @derivedFrom(field: "domain")
}

type Phase6RegistrySkill @entity {
  id: ID!
  domain: Phase6RegistryDomain!
  skillId: Bytes!
  key: String!
  label: String!
  metadataURI: String!
  requiresCredential: Boolean!
  active: Boolean!
  registeredAtBlock: BigInt!
  registeredAtTimestamp: BigInt!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
}

type Phase6RegistryAgent @entity {
  id: ID!
  domain: Phase6RegistryDomain!
  agent: Bytes!
  didURI: String!
  manifestHash: Bytes!
  credentialHash: Bytes
  submitter: Bytes!
  approved: Boolean!
  active: Boolean!
  registeredAtBlock: BigInt!
  registeredAtTimestamp: BigInt!
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
  skillIds: [Bytes!]!
}

type Phase6GlobalConfig @entity {
  id: ID!
  iotOracleRouter: Bytes
  defaultL2Gateway: Bytes
  didRegistry: Bytes
  treasuryBridge: Bytes
  l2SyncCadence: Int!
  manifestURI: String!
  systemPause: Bytes
  escalationBridge: Bytes
  lastEscalationTarget: Bytes
  lastEscalationData: Bytes
  lastEscalationResponse: Bytes
  lastEscalationKind: String
  lastEscalationAtBlock: BigInt
  lastEscalationAtTimestamp: BigInt
  updatedAtBlock: BigInt!
  updatedAtTimestamp: BigInt!
  treasuryBufferBps: Int!
  circuitBreakerBps: Int!
  anomalyGracePeriod: Int!
  autoPauseEnabled: Boolean!
  oversightCouncil: Bytes
  telemetryManifestHash: Bytes
  telemetryMetricsDigest: Bytes
  telemetryResilienceFloorBps: Int!
  telemetryAutomationFloorBps: Int!
  telemetryOversightWeightBps: Int!
  meshCoordinator: Bytes
  dataLake: Bytes
  identityBridge: Bytes
  infrastructureTopologyURI: String!
  infrastructureAutopilotCadence: Int!
  enforceDecentralizedInfra: Boolean!
}
