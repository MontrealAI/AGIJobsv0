// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class StakeDeposited extends ethereum.Event {
  get params(): StakeDeposited__Params {
    return new StakeDeposited__Params(this);
  }
}

export class StakeDeposited__Params {
  _event: StakeDeposited;

  constructor(event: StakeDeposited) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StakeSlashed extends ethereum.Event {
  get params(): StakeSlashed__Params {
    return new StakeSlashed__Params(this);
  }
}

export class StakeSlashed__Params {
  _event: StakeSlashed;

  constructor(event: StakeSlashed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get employer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get treasury(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get employerShare(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get treasuryShare(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get burnShare(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class StakeManager extends ethereum.SmartContract {
  static bind(address: Address): StakeManager {
    return new StakeManager("StakeManager", address);
  }
}
