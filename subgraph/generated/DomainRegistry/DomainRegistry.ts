// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DomainRegistered extends ethereum.Event {
  get params(): DomainRegistered__Params {
    return new DomainRegistered__Params(this);
  }
}

export class DomainRegistered__Params {
  _event: DomainRegistered;

  constructor(event: DomainRegistered) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get slug(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DomainMetadataUpdated extends ethereum.Event {
  get params(): DomainMetadataUpdated__Params {
    return new DomainMetadataUpdated__Params(this);
  }
}

export class DomainMetadataUpdated__Params {
  _event: DomainMetadataUpdated;

  constructor(event: DomainMetadataUpdated) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get credentialSchema(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class DomainRuntimeUpdated extends ethereum.Event {
  get params(): DomainRuntimeUpdated__Params {
    return new DomainRuntimeUpdated__Params(this);
  }
}

export class DomainRuntimeUpdated__Params {
  _event: DomainRuntimeUpdated;

  constructor(event: DomainRuntimeUpdated) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get dispatcher(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oracle(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get bridge(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get l2Gateway(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get l2Network(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class DomainCapsUpdated extends ethereum.Event {
  get params(): DomainCapsUpdated__Params {
    return new DomainCapsUpdated__Params(this);
  }
}

export class DomainCapsUpdated__Params {
  _event: DomainCapsUpdated;

  constructor(event: DomainCapsUpdated) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get minStake(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get resilienceFloor(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get maxConcurrentJobs(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get requiresHumanReview(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class DomainStatusUpdated extends ethereum.Event {
  get params(): DomainStatusUpdated__Params {
    return new DomainStatusUpdated__Params(this);
  }
}

export class DomainStatusUpdated__Params {
  _event: DomainStatusUpdated;

  constructor(event: DomainStatusUpdated) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get active(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class DomainPaused extends ethereum.Event {
  get params(): DomainPaused__Params {
    return new DomainPaused__Params(this);
  }
}

export class DomainPaused__Params {
  _event: DomainPaused;

  constructor(event: DomainPaused) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DomainResumed extends ethereum.Event {
  get params(): DomainResumed__Params {
    return new DomainResumed__Params(this);
  }
}

export class DomainResumed__Params {
  _event: DomainResumed;

  constructor(event: DomainResumed) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SlugReassigned extends ethereum.Event {
  get params(): SlugReassigned__Params {
    return new SlugReassigned__Params(this);
  }
}

export class SlugReassigned__Params {
  _event: SlugReassigned;

  constructor(event: SlugReassigned) {
    this._event = event;
  }

  get domainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get slug(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DomainRegistry extends ethereum.SmartContract {
  static bind(address: Address): DomainRegistry {
    return new DomainRegistry("DomainRegistry", address);
  }
}
