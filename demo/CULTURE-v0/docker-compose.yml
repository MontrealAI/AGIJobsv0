version: "3.9"

x-environment: &default-env
  RPC_URL: ${RPC_URL}
  CHAIN_ID: ${CHAIN_ID}
  JOB_REGISTRY_ADDRESS: ${JOB_REGISTRY_ADDRESS}
  VALIDATION_MODULE_ADDRESS: ${VALIDATION_MODULE_ADDRESS}
  STAKE_MANAGER_ADDRESS: ${STAKE_MANAGER_ADDRESS}
  IDENTITY_REGISTRY_ADDRESS: ${IDENTITY_REGISTRY_ADDRESS}
  FEE_POOL_ADDRESS: ${FEE_POOL_ADDRESS}
  CULTURE_REGISTRY_ADDRESS: ${CULTURE_REGISTRY_ADDRESS}
  SELF_PLAY_ARENA_ADDRESS: ${SELF_PLAY_ARENA_ADDRESS}
  IPFS_API_URL: ${IPFS_API_URL}
  IPFS_PROJECT_ID: ${IPFS_PROJECT_ID}
  IPFS_PROJECT_SECRET: ${IPFS_PROJECT_SECRET}
  SENTRY_DSN: ${SENTRY_DSN}
  SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}

services:
  hardhat-node:
    image: node:20-alpine
    working_dir: /opt/agi
    command: ["sh", "-c", "pnpm install && pnpm hardhat node"]
    volumes:
      - ../..:/opt/agi
    ports:
      - "8545:8545"
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:8545').catch(()=>process.exit(1))"]
      interval: 10s
      timeout: 3s
      retries: 10

  contracts-deployer:
    image: node:20-alpine
    working_dir: /opt/agi
    depends_on:
      hardhat-node:
        condition: service_healthy
    command: ["sh", "-c", "pnpm install && pnpm hardhat run demo/CULTURE-v0/scripts/deploy.culture.ts --network localhost"]
    environment:
      <<: *default-env
      DEPLOYER_PRIVATE_KEY: ${DEPLOYER_PRIVATE_KEY}
    volumes:
      - ../..:/opt/agi

  arena-orchestrator:
    build:
      context: ./backend/arena-orchestrator
    env_file: .env
    depends_on:
      hardhat-node:
        condition: service_healthy
      contracts-deployer:
        condition: service_completed_successfully
    ports:
      - "${ORCHESTRATOR_PORT:-4000}:4000"
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 15s
      timeout: 5s
      retries: 5

  culture-indexer:
    build:
      context: ./indexers/culture-graph-indexer
    env_file: .env
    depends_on:
      contracts-deployer:
        condition: service_completed_successfully
    ports:
      - "${INDEXER_PORT:-4100}:4100"

  culture-studio:
    build:
      context: ./apps/culture-studio
    env_file: .env
    depends_on:
      arena-orchestrator:
        condition: service_healthy
      culture-indexer:
        condition: service_started
    ports:
      - "${UI_PORT:-3000}:3000"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "${GRAFANA_PORT:-3100}:3000"
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_started
