name: release-mainnet

on:
  workflow_dispatch:
    inputs:
      network:
        description: "Deploy target"
        type: choice
        options: [ mainnet, sepolia ]
        default: mainnet
      confirm:
        description: "Type YES to confirm"
        required: true
        default: "NO"

permissions:
  contents: read
  id-token: write
  packages: read

jobs:
  guard:
    runs-on: ubuntu-24.04
    steps:
      - name: Confirm
        run: |
          test "${{ inputs.confirm }}" = "YES" || { echo "Deployment not confirmed"; exit 1; }

  plan:
    needs: guard
    runs-on: ubuntu-24.04
    env:
      FEE_PCT: "0.02"
      BURN_PCT: "0.06"
      TREASURY: "0x1111111111111111111111111111111111111111"
      VALIDATORS_PER_JOB: "3"
      REQUIRED_APPROVALS: "3"
      COMMIT_WINDOW: "30m"
      REVEAL_WINDOW: "30m"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci

      - name: Compile (scripts & constants)
        run: |
          npx ts-node --esm --transpile-only scripts/generate-constants.ts \
          || node --import 'data:text/javascript,import { register } from "node:module";import { pathToFileURL } from "node:url";register("ts-node/esm", pathToFileURL("./"));' scripts/generate-constants.ts \
          || (npx esbuild scripts/generate-constants.ts --bundle --platform=node --format=esm --outfile=.tmp/generate-constants.mjs && node .tmp/generate-constants.mjs)
          npx hardhat compile

      - name: Build Safe execution plan
        env:
          RPC_URL: ${{ inputs.network == 'mainnet' && secrets.MAINNET_RPC_URL || secrets.SEPOLIA_RPC_URL }}
          SAFE_ADDRESS: ${{ secrets.SAFE_ADDRESS }}
        run: |
          npx hardhat run scripts/v2/plan-deploy.ts --network ${{ inputs.network }} > plan.json
          jq -e . plan.json >/dev/null 2>&1 || echo "{}" > plan.json

      - uses: actions/upload-artifact@v4
        with:
          name: safe-bundle-${{ inputs.network }}
          path: plan.json
