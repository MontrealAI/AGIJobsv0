name: demo-national-supply-chain

on:
  pull_request:
    paths:
      - 'scripts/v2/nationalSupplyChainGrandDemo.ts'
      - 'scripts/v2/launchNationalSupplyChainControlRoom.ts'
      - 'demo/National-Supply-Chain-v0/**'
      - 'package.json'
      - '.github/workflows/demo-national-supply-chain.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  national-supply-chain-demo:
    runs-on: ubuntu-24.04
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: block
          allowed-endpoints: |
            api.github.com
            github.com
            objects.githubusercontent.com
            raw.githubusercontent.com
            registry.npmjs.org
            nodejs.org

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version-file: '.nvmrc'
          cache: npm
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline --progress=false

      - name: Run national supply chain export
        run: npm run demo:national-supply-chain:export

      - name: Render executive report
        run: |
          npm run demo:national-supply-chain:report -- \
            --input demo/National-Supply-Chain-v0/ui/export/latest.json \
            --output demo/National-Supply-Chain-v0/ui/export/latest-report.md

      - name: Validate supply chain transcript
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = 'demo/National-Supply-Chain-v0/ui/export/latest.json';
          const data = JSON.parse(fs.readFileSync(path, 'utf8'));
          const checks = {
            timeline: Array.isArray(data.timeline) && data.timeline.length > 0,
            ownerActions: Array.isArray(data.ownerActions) && data.ownerActions.length > 0,
            scenarios: Array.isArray(data.scenarios) && data.scenarios.length > 0,
            agentPortfolios:
              data.market && Array.isArray(data.market.agentPortfolios) && data.market.agentPortfolios.length > 0,
            ownerControl: data.ownerControl && data.ownerControl.baseline,
          };
          for (const [label, ok] of Object.entries(checks)) {
            if (!ok) {
              throw new Error(`Transcript check failed: ${label}`);
            }
          }
          console.log(`Validated transcript with ${data.timeline.length} timeline entries, ${data.ownerActions.length} owner actions, and ${data.market.agentPortfolios.length} agent portfolios.`);
          NODE

      - name: Validate executive report
        run: |
          REPORT=demo/National-Supply-Chain-v0/ui/export/latest-report.md
          test -s "$REPORT"
          head -n 5 "$REPORT"

      - name: Upload transcript artifact
        uses: actions/upload-artifact@v4
        with:
          name: national-supply-chain-transcript
          path: |
            demo/National-Supply-Chain-v0/ui/export/latest.json
            demo/National-Supply-Chain-v0/ui/export/latest-report.md
