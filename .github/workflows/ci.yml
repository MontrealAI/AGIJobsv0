name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.12.2'
  FOUNDRY_VERSION: 'nightly-1cc7cc9e54442be31ca03ceb794d9c7ad1d3d9b3'
  SOLC_VERSION: '0.8.25'
  CI: 'true'

jobs:
  build-test:
    name: Build • Lint • Unit tests
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps (npm ci, exact lockfile)
        run: npm ci

      - name: Security audit (allowlist enforced)
        run: npm run security:audit

      - name: Pin Foundry toolchain
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      - name: Print tool versions
        run: |
          node -v
          npm -v
          forge --version

      - name: Lint & format (no writes)
        run: |
          npm run lint:check || (echo "::error::Lint failed. Run npm run lint:fix locally." && exit 1)
          npm run format:check || (echo "::error::Format failed. Run npm run format:fix locally." && exit 1)

      - name: Compile (hardhat)
        env:
          HARDHAT_NETWORK: hardhat
        run: npm run compile

      - name: Unit tests (local hardhat network)
        env:
          HARDHAT_NETWORK: hardhat
          ETHERSCAN_API_KEY: ''
          RPC_URL: ''
        run: npm test

  slither:
    name: Slither (fail-high)
    needs: build-test
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Run Slither inside pinned Docker
        uses: crytic/slither-action@v0.3.0
        with:
          target: .
          slither-args: --fail-high --exclude-dependencies --solc-remaps "@openzeppelin=node_modules/@openzeppelin"
          sarif: true
      - name: Upload SARIF to code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  echidna-smoke:
    name: Echidna smoke (PR)
    needs: build-test
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    container: ghcr.io/crytic/echidna:2.2.3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install JS dependencies
        run: npm ci
      - name: Smoke fuzz (bounded & deterministic)
        env:
          MALLOC_ARENA_MAX: 2
        run: |
          echidna-test ./contracts/test/CommitRevealEchidna.sol \
            --contract CommitRevealEchidnaHarness \
            --config ./echidna/echidna.smoke.yml \
            --test-mode assertion \
            --seed 1337 \
            --corpus-dir echidna/corpus-smoke

  coverage:
    name: Coverage (threshold gate)
    needs: build-test
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: Run coverage (no forking)
        env:
          HARDHAT_NETWORK: coverage
        run: npm run coverage:full
      - name: Enforce threshold
        run: node ./scripts/ci/check-coverage-threshold.mjs 90

  gas:
    name: Gas snapshot (regression gate)
    needs: build-test
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ env.FOUNDRY_VERSION }}
      - name: Ensure baseline snapshot exists
        env:
          FOUNDRY_PROFILE: gas
        run: |
          if [ ! -f gas-snapshots/.gas-snapshot ]; then
            forge snapshot --match-contract CommitRevealGas --snap gas-snapshots/.gas-snapshot
          fi
      - name: Check gas regressions (±3%)
        env:
          FOUNDRY_PROFILE: gas
        run: ./scripts/ci/check-gas-regressions.sh gas-snapshots/.gas-snapshot 3
