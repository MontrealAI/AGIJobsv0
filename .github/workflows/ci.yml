name: CI

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.12.2'
  AGIALPHA_TOKEN: '0xA61a3B3a130a9c20768EEBF97E21515A6046a1fA'
  COVERAGE_MIN: '90'

jobs:
  build-test:
    name: Build · Lint · Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Lint (best-effort)
        run: |
          npx --yes solhint -V >/dev/null 2>&1 && npx solhint 'contracts/**/*.sol' || true
          npx --yes eslint -v   >/dev/null 2>&1 && npx eslint . --ext .js,.cjs,.mjs || true

      - name: Start Ganache (deterministic)
        run: |
          npx --yes ganache --quiet --chain.allowUnlimitedContractSize --miner.blockGasLimit 30000000 &
          sleep 3

      - name: Compile
        run: npm run compile

      - name: Unit tests
        run: npm test

      - name: Coverage (if configured)
        run: npx --yes solidity-coverage || echo "coverage not configured; skipping"

      - name: Enforce coverage threshold
        run: node scripts/check-coverage.js $COVERAGE_MIN

      - name: Verify wiring ($AGIALPHA) & owner control
        env:
          WIRE_VERIFY_RPC_URL: http://127.0.0.1:8545
        run: |
          npm run wire:verify
          npm run owner:health

  slither:
    name: Slither (code scanning)
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Run Slither
        id: slither
        uses: crytic/slither-action@v0.4.1
        with:
          node-version: 20
          target: .
          fail-on: high
          sarif: results.sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}

  echidna-smoke:
    name: Echidna (smoke harness)
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install
        run: npm ci
      - name: Precompile with Hardhat
        run: npx hardhat compile
      - name: Run Echidna (assertion mode)
        uses: crytic/echidna-action@v2
        with:
          files: .
          contract: EchidnaSmoke
          test-mode: assertion
          format: text
          seq-len: 64
          crytic-args: --hardhat-ignore-compile
