name: ci

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ['**']
  push:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  # ---- Safe CI defaults consumed by scripts/generate-constants.ts and tests ----
  # Use whole percent points (not decimals): 2 => 2%, 6 => 6%
  FEE_PCT: "2"
  BURN_PCT: "6"
  TREASURY: "0x1111111111111111111111111111111111111111"

  VALIDATORS_PER_JOB: "3"
  REQUIRED_APPROVALS: "3"
  COMMIT_WINDOW: "30m"
  REVEAL_WINDOW: "30m"

  COVERAGE_MIN: "90"
  ACCESS_CONTROL_PATHS: "contracts/v2/admin,contracts/v2/governance"
  # ---------------------------------------------------------------------------

jobs:
  # ----------------------------------------------------
  # JS/TS + Hardhat tests (your npm test chain)
  # ----------------------------------------------------
  tests:
    name: Tests
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # Your "npm test" already compiles (via pretest), runs Node tests and Hardhat tests.
      # We keep it intact so ALL existing tests run exactly as defined.
      - name: Run npm test (JS/TS + Hardhat)
        shell: bash
        run: npm test

  # ----------------------------------------------------
  # Foundry tests (kept in a dedicated job)
  # ----------------------------------------------------
  foundry:
    name: Foundry
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Run Foundry tests
        run: forge test -vvvv --ffi --fuzz-runs 256 --match-contract 'CommitReveal|Stake|Fee|Slashing'

  # ----------------------------------------------------
  # Coverage (never skipped on PRs) â€“ enforces COVERAGE_MIN
  # ----------------------------------------------------
  coverage:
    name: Coverage thresholds
    runs-on: ubuntu-24.04
    # Ensure the coverage gate runs even if another job fails; status will still report separately.
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # Generate constants + compile happens inside your npm scripts as needed,
      # but we run hardhat coverage directly to emit lcov.info.
      - name: Run Solidity coverage
        run: npx hardhat coverage

      - name: Enforce coverage threshold (${{ env.COVERAGE_MIN }}%)
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f coverage/lcov.info ]; then
            echo "coverage/lcov.info not found. Did hardhat coverage run?"
            exit 1
          fi
          node -e '
            const fs = require("fs");
            const path = "coverage/lcov.info";
            const data = fs.readFileSync(path, "utf8").split("\n");
            let LF = 0, LH = 0;
            for (const line of data) {
              if (line.startsWith("LF:")) LF += Number(line.slice(3));
              if (line.startsWith("LH:")) LH += Number(line.slice(3));
            }
            const pct = LF ? (LH / LF * 100) : 0;
            const min = Number(process.env.COVERAGE_MIN || "90");
            console.log(`Lines Hit: ${LH} / ${LF} => ${pct.toFixed(2)}% (min ${min}%)`);
            if (pct + 1e-9 < min) { // tolerate FP drift
              console.error(`Coverage ${pct.toFixed(2)}% is below minimum ${min}%`);
              process.exit(1);
            }
          ' | tee -a "$GITHUB_STEP_SUMMARY"

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: solidity-coverage
          path: coverage/
