name: containers

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: containers-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: node-runner
            context: .
            file: deploy/docker/orchestrator.Dockerfile
            tag: node-runner:latest
          - name: validator-runner
            context: .
            file: deploy/docker/attester.Dockerfile
            tag: validator-runner:latest
          - name: gateway
            context: .
            file: agent-gateway/Dockerfile
            tag: gateway:latest
          - name: webapp
            context: .
            file: apps/enterprise-portal/Dockerfile
            tag: webapp:latest
          - name: owner-console
            context: apps/console
            file: apps/console/Dockerfile
            tag: owner-console:latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
        with:
          driver-opts: network=host

      - name: Normalise image namespace
        run: |
          echo "REPO_OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (PR, single-arch, load)
        if: github.event_name == 'pull_request'
        id: build-pr
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.file }}
          platforms: linux/amd64
          load: true
          push: false
          provenance: false
          sbom: false
          outputs: type=docker
          tags: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ matrix.image.tag }}

      - name: Build & Push (main/tags, multi-arch, attestations)
        if: github.event_name != 'pull_request'
        id: build-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.file }}
          platforms: linux/amd64,linux/arm64
          load: false
          push: true
          provenance: mode=max
          sbom: true
          tags: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ matrix.image.tag }}

      - name: Trivy scan (OS packages)
        if: github.event_name != 'pull_request' && steps.build-push.outputs.digest
        env:
          IMAGE_REF: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ matrix.image.tag }}@${{ steps.build-push.outputs.digest }}
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$PWD/.trivyignore":/etc/trivy/.trivyignore:ro \
            aquasec/trivy:0.53.0 \
            image --vuln-type os --severity HIGH,CRITICAL --exit-code 1 \
            "$IMAGE_REF"

      - name: Trivy scan (application packages)
        if: github.event_name != 'pull_request' && steps.build-push.outputs.digest
        continue-on-error: true
        env:
          IMAGE_REF: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ matrix.image.tag }}@${{ steps.build-push.outputs.digest }}
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$PWD/.trivyignore":/etc/trivy/.trivyignore:ro \
            aquasec/trivy:0.53.0 \
            image --vuln-type library --severity HIGH,CRITICAL --exit-code 0 \
            "$IMAGE_REF"

      - name: Upload container digest
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ steps.build-push.outputs.digest }}" > digest.txt
        shell: bash

      - name: Publish digest artefact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ matrix.image.name }}-digest
          path: digest.txt
