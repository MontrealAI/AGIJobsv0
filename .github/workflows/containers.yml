name: containers

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: containers-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: node-runner
            context: .
            dockerfile: deploy/docker/orchestrator.Dockerfile
          - name: validator-runner
            context: .
            dockerfile: deploy/docker/attester.Dockerfile
          - name: gateway
            context: .
            dockerfile: agent-gateway/Dockerfile
          - name: webapp
            context: .
            dockerfile: apps/enterprise-portal/Dockerfile
          - name: owner-console
            context: apps/console
            dockerfile: Dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Normalise image namespace
        run: |
          echo "REPO_OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"

      - name: Log in to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and (optionally) push ${{ matrix.name }}
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ matrix.name }}:latest
          provenance: true
          sbom: true
          load: true

      - name: Trivy scan
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:0.53.0 \
            image --exit-code 1 --severity HIGH,CRITICAL \
            ${{ steps.build.outputs.imageid }}

      - name: Upload container digest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "${{ steps.build.outputs.digest }}" > digest.txt
        shell: bash

      - name: Publish digest artefact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-digest
          path: digest.txt
