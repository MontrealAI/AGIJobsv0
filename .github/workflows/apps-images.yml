name: apps-images

on:
  pull_request:
    paths:
      - 'apps/**'
      - '.github/workflows/apps-images.yml'
  push:
    branches: [main]
    paths:
      - 'apps/**'
      - '.github/workflows/apps-images.yml'

permissions:
  contents: read
  packages: write
  security-events: write
  id-token: write

concurrency:
  group: apps-${{ github.ref }}
  cancel-in-progress: true

jobs:
  console:
    runs-on: ubuntu-24.04
    outputs:
      digest: ${{ steps.get_digest.outputs.digest }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: audit

      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Login to GHCR (main)
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Console image
        id: build_console
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: apps/console/Dockerfile
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/owner-console:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/owner-console:latest
          provenance: false
          sbom: false
          outputs: type=docker

      - name: Get Console digest (main)
        id: get_digest
        if: github.ref == 'refs/heads/main'
        run: |
          REF="ghcr.io/${{ github.repository_owner }}/owner-console:${{ github.sha }}"
          DIGEST=$(docker buildx imagetools inspect "$REF" | awk -F'[: ]+' '/Digest:/ {print $2; exit}')
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Trivy (OS – enforce)
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:0.53.0 image \
              --vuln-type os \
              --severity HIGH,CRITICAL \
              --exit-code 1 \
              ghcr.io/${{ github.repository_owner }}/owner-console:${{ github.sha }}

      - name: Trivy (libraries – audit only)
        continue-on-error: true
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:0.53.0 image \
              --vuln-type library \
              --severity HIGH,CRITICAL \
              --exit-code 0 \
              ghcr.io/${{ github.repository_owner }}/owner-console:${{ github.sha }}

  portal:
    runs-on: ubuntu-24.04
    outputs:
      digest: ${{ steps.get_digest.outputs.digest }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: audit

      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Setup Node for web build
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install root deps
        run: npm ci

      - name: Webapp build
        run: npm --prefix apps/enterprise-portal run build

      - name: Login to GHCR (main)
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Portal image
        id: build_portal
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: apps/enterprise-portal/Dockerfile
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/webapp:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/webapp:latest
          provenance: false
          sbom: false
          outputs: type=docker

      - name: Get Portal digest (main)
        id: get_digest
        if: github.ref == 'refs/heads/main'
        run: |
          REF="ghcr.io/${{ github.repository_owner }}/webapp:${{ github.sha }}"
          DIGEST=$(docker buildx imagetools inspect "$REF" | awk -F'[: ]+' '/Digest:/ {print $2; exit}')
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Trivy (OS – enforce)
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:0.53.0 image \
              --vuln-type os \
              --severity HIGH,CRITICAL \
              --exit-code 1 \
              ghcr.io/${{ github.repository_owner }}/webapp:${{ github.sha }}

      - name: Trivy (libraries – audit only)
        continue-on-error: true
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:0.53.0 image \
              --vuln-type library \
              --severity HIGH,CRITICAL \
              --exit-code 0 \
              ghcr.io/${{ github.repository_owner }}/webapp:${{ github.sha }}

  provenance-console:
    if: github.ref == 'refs/heads/main'
    needs: [console]
    permissions:
      actions: read
      id-token: write
      contents: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@5a775b367a56d5bd118a224a811bba288150a563
    with:
      base64-subjects: ${{ toJson(format('ghcr.io/{0}/owner-console@{1}', github.repository_owner, needs.console.outputs.digest)) }}

  provenance-portal:
    if: github.ref == 'refs/heads/main'
    needs: [portal]
    permissions:
      actions: read
      id-token: write
      contents: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@5a775b367a56d5bd118a224a811bba288150a563
    with:
      base64-subjects: ${{ toJson(format('ghcr.io/{0}/webapp@{1}', github.repository_owner, needs.portal.outputs.digest)) }}
