name: CULTURE Demo CI

on:
  push:
    paths:
      - 'demo/CULTURE-v0/**'
  pull_request:
    paths:
      - 'demo/CULTURE-v0/**'
  workflow_dispatch:

permissions:
  contents: read
  checks: read

env:
  FORCE_COLOR: '1'
  COVERAGE_MIN: '90'
  PNPM_HOME: ~/.local/share/pnpm
  PNPM_CACHE_DIR: ~/.pnpm-store

jobs:
  lint:
    name: Workspace lint & formatting
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: 'pnpm'
          cache-dependency-path: demo/CULTURE-v0/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: demo/CULTURE-v0
        run: pnpm install --frozen-lockfile
      - name: ESLint / Prettier
        working-directory: demo/CULTURE-v0
        run: |
          pnpm lint
          pnpm format

  solidity:
    name: Contracts (Foundry & Hardhat)
    runs-on: ubuntu-24.04
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: 'pnpm'
          cache-dependency-path: demo/CULTURE-v0/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: demo/CULTURE-v0
        run: pnpm install --frozen-lockfile
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
      - name: Solhint lint
        working-directory: demo/CULTURE-v0
        run: pnpm exec solhint "contracts/**/*.sol"
      - name: Foundry tests & gas snapshot
        working-directory: demo/CULTURE-v0
        run: |
          pnpm run test:contracts
          pnpm exec forge snapshot --snap gas-snapshots/.gas-snapshot --check
      - name: Hardhat tests
        working-directory: demo/CULTURE-v0
        run: pnpm run test:contracts:hardhat
      - name: Coverage (Foundry & Hardhat)
        working-directory: demo/CULTURE-v0
        run: |
          pnpm run test:contracts:coverage
          pnpm run test:contracts:coverage:hardhat
      - name: Upload coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: culture-contract-coverage
          path: |
            demo/CULTURE-v0/coverage
            demo/CULTURE-v0/lcov.info

  static-analysis:
    name: Static analyzers
    runs-on: ubuntu-24.04
    needs: solidity
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: 'pnpm'
          cache-dependency-path: demo/CULTURE-v0/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: demo/CULTURE-v0
        run: pnpm install --frozen-lockfile
      - name: Run Slither
        working-directory: demo/CULTURE-v0
        run: |
          docker run --rm \
            -v "${PWD}":/workspace \
            -w /workspace/demo/CULTURE-v0 \
            ghcr.io/crytic/slither:0.10.4 \
            . --config-file slither.config.json
      - name: MythX analysis
        if: ${{ env.MYTHX_API_KEY != '' || secrets.MYTHX_API_KEY != '' }}
        working-directory: demo/CULTURE-v0
        env:
          MYTHX_API_KEY: ${{ secrets.MYTHX_API_KEY || env.MYTHX_API_KEY }}
        run: |
          docker run --rm \
            -e MYTHX_API_KEY \
            -v "${PWD}":/workspace \
            -w /workspace/demo/CULTURE-v0 \
            mythx/mythx-cli:latest analyze contracts/CultureRegistry.sol contracts/SelfPlayArena.sol
      - name: MythX notice
        if: ${{ !(env.MYTHX_API_KEY != '' || secrets.MYTHX_API_KEY != '') }}
        run: echo 'MythX API key not provided; skipping MythX analysis.'

  services:
    name: Package test suites
    runs-on: ubuntu-24.04
    needs: lint
    timeout-minutes: 35
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: 'pnpm'
          cache-dependency-path: demo/CULTURE-v0/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: demo/CULTURE-v0
        run: pnpm install --frozen-lockfile
      - name: Service coverage
        working-directory: demo/CULTURE-v0
        run: pnpm run test:services
      - name: Upload service coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: culture-service-coverage
          path: |
            demo/CULTURE-v0/backend/arena-orchestrator/coverage
            demo/CULTURE-v0/indexers/culture-graph-indexer/coverage
            demo/CULTURE-v0/apps/culture-studio/coverage

  coverage-enforcement:
    name: Coverage & budget enforcement
    runs-on: ubuntu-24.04
    needs:
      - solidity
      - services
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Download contract coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: culture-contract-coverage
          path: demo/CULTURE-v0
      - name: Download service coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: culture-service-coverage
          path: demo/CULTURE-v0
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: 'pnpm'
          cache-dependency-path: demo/CULTURE-v0/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: demo/CULTURE-v0
        run: pnpm install --frozen-lockfile
      - name: Coverage & budget enforcement
        working-directory: demo/CULTURE-v0
        run: |
          pnpm run check:coverage
          pnpm run check:budgets

  e2e:
    name: Cypress smoke
    runs-on: ubuntu-24.04
    needs:
      - solidity
      - services
    timeout-minutes: 60
    services:
      anvil:
        image: ghcr.io/foundry-rs/foundry:latest
        options: >-
          --health-cmd "cast block-number" --health-interval 5s --health-timeout 5s --health-retries 12 --health-start-period 5s
        ports:
          - 8545:8545
        command: ["anvil", "--host", "0.0.0.0", "--port", "8545", "--chain-id", "31337", "--block-time", "2"]
      ipfs:
        image: ipfs/kubo:latest
        ports:
          - 8080:8080
          - 5001:5001
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: culture
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: 'pnpm'
          cache-dependency-path: demo/CULTURE-v0/pnpm-lock.yaml
      - name: Install dependencies
        working-directory: demo/CULTURE-v0
        run: pnpm install --frozen-lockfile
      - name: Seed deployment artifacts
        working-directory: demo/CULTURE-v0
        env:
          RPC_URL: http://127.0.0.1:8545
          CULTURE_DEPLOY_OUTPUT: ${{ runner.temp }}/deployments.json
          CULTURE_ENV_FILE: ${{ runner.temp }}/.env.ci
        run: |
          pnpm exec hardhat compile --config hardhat.config.ts
          pnpm exec hardhat run --config hardhat.config.ts scripts/deploy.culture.ts --network localhost
          pnpm exec hardhat run --config hardhat.config.ts scripts/owner.setParams.ts --network localhost
          pnpm exec hardhat run --config hardhat.config.ts scripts/owner.setRoles.ts --network localhost
          pnpm exec hardhat run --config hardhat.config.ts scripts/seed.culture.ts --network localhost
      - name: Start docker compose services
        working-directory: demo/CULTURE-v0
        run: |
          docker compose up -d culture-orchestrator culture-indexer culture-studio
      - name: Wait for readiness
        run: |
          for attempt in {1..40}; do
            if curl -fsS http://localhost:4005/metrics >/dev/null 2>&1 \
              && curl -fsS http://localhost:4100/healthz >/dev/null 2>&1 \
              && curl -fsS http://localhost:4173/healthz >/dev/null 2>&1; then
              exit 0
            fi
            sleep 5
          done
          echo "Services failed to become healthy" >&2
          docker compose -f demo/CULTURE-v0/docker-compose.yml logs
          exit 1
      - name: Run Cypress (headless)
        working-directory: demo/CULTURE-v0
        run: pnpm exec cypress run --config-file cypress.config.ts
      - name: Shutdown stack
        if: always()
        working-directory: demo/CULTURE-v0
        run: docker compose down -v
