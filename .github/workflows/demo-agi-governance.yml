name: demo-agi-governance

on:
  pull_request:
    paths:
      - 'scripts/v2/agiGovernanceGrandDemo.ts'
      - 'scripts/v2/launchAgiGovernanceControlRoom.ts'
      - 'demo/agi-governance/**'
      - '.github/workflows/demo-agi-governance.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  agi-governance-demo:
    runs-on: ubuntu-24.04
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: block
          allowed-endpoints: |
            api.github.com
            github.com
            objects.githubusercontent.com
            raw.githubusercontent.com
            registry.npmjs.org
            nodejs.org

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version-file: '.nvmrc'
          cache: npm
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline --progress=false

      - name: Run Solving Î±-AGI Governance export
        run: npm run demo:agi-governance:export

      - name: Validate governance transcript
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = 'demo/agi-governance/ui/export/latest.json';
          const data = JSON.parse(fs.readFileSync(path, 'utf8'));
          const requiredArrays = [
            ['timeline', data.timeline],
            ['ownerActions', data.ownerActions],
            ['scenarios', data.scenarios],
            ['metrics', data.market?.hamiltonianTelemetry],
          ];
          for (const [label, value] of requiredArrays) {
            if (!Array.isArray(value) || value.length === 0) {
              throw new Error(`${label} missing from transcript`);
            }
          }
          if (!data.ownerControl || !data.ownerControl.baseline) {
            throw new Error('ownerControl baseline snapshot missing');
          }
          if (!data.automation || !data.automation.commands) {
            throw new Error('automation directives missing');
          }
          console.log(`Validated governance transcript with ${data.timeline.length} timeline entries and ${data.ownerActions.length} owner actions.`);
          NODE

      - name: Upload transcript artifact
        uses: actions/upload-artifact@v4
        with:
          name: agi-governance-transcript
          path: demo/agi-governance/ui/export/latest.json
