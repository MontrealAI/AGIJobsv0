name: e2e

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: e2e-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  orchestrator-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      TERM: xterm
      CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            binaries.soliditylang.org:443
            codeload.github.com:443
            download.docker.com:443
            foundry.paradigm.xyz:443
            ghcr.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            production.cloudflare.docker.com:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
            storage.googleapis.com:443
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Orchestrator tsc
        run: npx tsc -p apps/orchestrator/tsconfig.json

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@50d5a8956f2e319df19e6b57539d7e2acb9f8c1e
        with:
          version: 'v1.4.0'

      - name: Compile
        env:
          COVERAGE_MIN: 90
        run: |
          npx ts-node --compiler-options '{"module":"commonjs"}' scripts/generate-constants.ts
          npx hardhat compile

      - name: Start anvil mainnet fork
        id: anvil
        env:
          MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
        run: |
          set -euo pipefail
          if [ -n "${MAINNET_RPC_URL:-}" ]; then
            echo "Starting anvil with mainnet fork"
            anvil --fork-url "$MAINNET_RPC_URL" --host 127.0.0.1 --port 8545 --chain-id 31337 --block-time 2 &
          else
            echo "Starting local anvil without fork"
            anvil --host 127.0.0.1 --port 8545 --chain-id 31337 --block-time 2 &
          fi
          echo "anvil-pid=$!" >> "$GITHUB_OUTPUT"
          sleep 5

      - name: Local gateway orchestration
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: npm run e2e:local

      - name: Mainnet fork drill
        env:
          MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
          SKIP_MOCK_AGIALPHA: '1'
        run: npm run test:fork

      - name: Job lifecycle with dispute
        run: npx hardhat test --no-compile test/v2/jobLifecycleWithDispute.integration.test.ts

      - name: End-to-end dispute flow
        run: npx hardhat test --no-compile test/v2/endToEnd.integration.test.js

      - name: Upload e2e logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: e2e-logs
          path: |
            test/e2e
            test/v2
            reports/*.log

      - name: Shutdown anvil
        if: always()
        run: |
          if [ -n "${{ steps.anvil.outputs.anvil-pid }}" ]; then
            kill ${{ steps.anvil.outputs.anvil-pid }} || true
          fi
