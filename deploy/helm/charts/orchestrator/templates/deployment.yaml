apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrator.fullname" . }}
  labels:
    app.kubernetes.io/name: orchestrator
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: orchestrator
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-config.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: orchestrator
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: orchestrator
          {{- $repoPrefix := default "" (dig "image" "repositoryPrefix" .Values.global) }}
          {{- $repository := default (printf "%s/orchestrator" $repoPrefix | trimPrefix "/") .Values.image.repository }}
          {{- $digest := coalesce .Values.image.digest (dig "image" "digestOverrides" "orchestrator" .Values.global) }}
          {{- $tag := coalesce .Values.image.tag (dig "image" "tag" .Values.global) }}
          image: {{ $repository }}{{- if $digest -}}@{{ $digest }}{{- else -}}:{{ required "image.tag must be provided when no digest is configured for orchestrator" $tag }}{{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.env.logLevel | quote }}
            - name: CORS_ALLOWED_ORIGINS
              value: {{ join "," (default (.Values.global.cors.allowedOrigins | default (list)) .Values.env.corsOrigins) | quote }}
            - name: CORS_ALLOWED_HEADERS
              value: {{ join "," (default (.Values.global.cors.allowedHeaders | default (list)) .Values.env.corsHeaders) | quote }}
            - name: KMS_KEY_URI
              value: {{ .Values.env.kmsKey | quote }}
            - name: ENTRY_POINT_ADDRESS
              value: {{ required "contracts.entryPoint is required" (dig "contracts" "entryPoint" .Values.global) | quote }}
            - name: PAYMASTER_ADDRESS
              value: {{ required "contracts.paymaster is required" (dig "contracts" "paymaster" .Values.global) | quote }}
            - name: EAS_SCHEMA_UID
              value: {{ required "eas.schemaUID is required" (dig "eas" "schemaUID" .Values.global) | quote }}
            - name: RPC_URL
              value: {{ required "rpc.primary is required" (dig "rpc" "primary" .Values.global) | quote }}
            - name: STACK_PAUSED
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.pauseSwitch.configMap }}
                  key: {{ .Values.global.pauseSwitch.key }}
                  optional: true
            - name: MAX_REQUEST_BYTES
              value: {{ .Values.env.maxRequestBytes | quote }}
          ports:
            - containerPort: {{ .Values.service.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
