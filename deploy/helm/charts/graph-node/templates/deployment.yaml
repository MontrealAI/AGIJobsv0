apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graph-node.fullname" . }}
  labels:
    {{- include "graph-node.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "graph-node.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "graph-node.labels" . | nindent 8 }}
    spec:
      containers:
        - name: graph-node
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}{{- if .Values.image.digest }}@{{ .Values.image.digest }}{{- end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          env:
            {{- if (index .Values.env "ETHEREUM_RPC") }}
            - name: ETHEREUM_RPC
              value: "{{ index .Values.env "ETHEREUM_RPC" }}"
            {{- else if .Values.ethereum.rpc }}
            - name: ETHEREUM_RPC
              value: "{{ join "," .Values.ethereum.rpc }}"
            {{- end }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.host | quote }}
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            {{- range $key, $value := .Values.env }}
            {{- if ne $key "ETHEREUM_RPC" }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- end }}
          envFrom:
            {{- if .Values.postgres.passwordSecret }}
            - secretRef:
                name: {{ .Values.postgres.passwordSecret }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: http
          livenessProbe:
            httpGet:
              path: /
              port: http
