{{- $global := default (dict) .Values.global -}}
{{- $observability := default (dict) $global.observability -}}
{{- $secrets := default (dict) $global.secrets -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graph-node.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: graph-node
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if (default false $observability.prometheusScrape) }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.indexer.metricsPort }}"
        {{- end }}
        {{- range $k, $v := .Values.podAnnotations }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: graph-node
          image: {{ include "graph-node.imageWithDigest" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: query
            - containerPort: {{ .Values.indexer.adminPort }}
              name: admin
            - containerPort: {{ .Values.indexer.metricsPort }}
              name: metrics
          env:
            - name: GRAPH_LOG
              value: info
            - name: GRAPH_ALLOW_NON_DETERMINISTIC_IPFS
              value: "true"
            - name: GRAPH_ALLOW_NON_DETERMINISTIC_IPFS_TIMEOUT
              value: "30"
            - name: GRAPH_NODE_ID
              value: {{ include "graph-node.fullname" . | quote }}
            - name: POSTGRESQL_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: {{ default "" .Values.postgres.connectionSecretName }}
                  key: database-url
            - name: IPFS
              value: {{ .Values.ipfsEndpoint | quote }}
          envFrom:
            - secretRef:
                name: {{ default (printf "%s-runtime" (include "graph-node.fullname" .)) $secrets.runtimeSecretName }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
