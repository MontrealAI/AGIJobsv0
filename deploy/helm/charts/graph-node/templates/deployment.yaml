apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphNode.fullname" . }}
  labels:
    app.kubernetes.io/name: graph-node
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: graph-node
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: graph-node
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: graph-node
          {{- $digest := coalesce .Values.image.digest (dig "image" "digestOverrides" "graph-node" .Values.global) }}
          {{- $tag := coalesce .Values.image.tag (dig "image" "tag" .Values.global) }}
          image: {{ .Values.image.repository }}{{- if $digest -}}@{{ $digest }}{{- else -}}:{{ required "image.tag must be provided when no digest is configured for graph-node" $tag }}{{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GRAPH_LOG
              value: info
            - name: RUST_LOG
              value: info
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.postgres.userSecret }}
                  key: POSTGRES_PASSWORD
          args:
            - run
            - --config
            - /etc/graph/config.toml
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          volumeMounts:
            - name: config
              mountPath: /etc/graph
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "graphNode.fullname" . }}-config
