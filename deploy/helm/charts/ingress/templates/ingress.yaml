{{- if .Values.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-shared" .Release.Name }}
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-max-age: "{{ .Values.security.hstsMaxAge }}"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "{{ ternary "true" "false" (.Values.security.includeSubdomains | default true) }}"
    nginx.ingress.kubernetes.io/hsts-preload: "{{ ternary "true" "false" (.Values.security.preload | default true) }}"
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/limit-rpm: "{{ default 300 .Values.rateLimitRpm }}"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "1"
    nginx.ingress.kubernetes.io/enable-modsecurity: {{ .Values.security.wafAnnotation | quote }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "{{ .Values.security.corsAllowOrigin }}"
    nginx.ingress.kubernetes.io/cors-allow-headers: "{{ join "," (.Values.security.corsAllowHeaders | default (list "Authorization" "Content-Type")) }}"
    nginx.ingress.kubernetes.io/cors-allow-methods: "{{ join "," (.Values.security.corsAllowMethods | default (list "GET" "POST")) }}"
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ default "1m" .Values.security.proxyBodySize }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ default "60s" .Values.security.requestTimeout }}"
spec:
  ingressClassName: {{ .Values.ingressClassName }}
  tls:
    - secretName: {{ .Values.defaultTlsSecret }}
      hosts:
{{- range .Values.hosts }}
        - {{ .host }}
{{- end }}
  rules:
{{- range .Values.hosts }}
    - host: {{ .host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ printf "%s-%s" $.Release.Name .serviceName }}
                port:
                  number: {{ .servicePort }}
{{- end }}
{{- end }}
