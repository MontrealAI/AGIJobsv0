{{- $global := default (dict) .Values.global -}}
{{- $contracts := default (dict) $global.contracts -}}
{{- $eas := default (dict) $global.eas -}}
{{- $observability := default (dict) $global.observability -}}
{{- $secrets := default (dict) $global.secrets -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paymaster-supervisor.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: paymaster-supervisor
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if (default false $observability.prometheusScrape) }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.port }}"
        {{- end }}
        {{- range $k, $v := .Values.podAnnotations }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.pauseConfigMap }}
      initContainers:
        - name: wait-for-unpause
          image: public.ecr.aws/bitnami/kubectl:1.28
          command:
            - /bin/sh
            - -c
            - |
              until [ "$(kubectl get cm {{ .Values.pauseConfigMap }} -n {{ .Release.Namespace }} -o jsonpath='{.data.pause}')" = "false" ]; do
                echo "Waiting for pause switch to be disabled";
                sleep 5;
              done
          volumeMounts:
            - name: kms-secrets
              mountPath: /var/run/secrets/kms
              readOnly: true
      {{- end }}
      containers:
        - name: paymaster-supervisor
          image: {{ include "paymaster-supervisor.imageWithDigest" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          env:
            - name: PAYMASTER_ADDRESS
              value: {{ default "" $contracts.paymaster | quote }}
            - name: EAS_SCHEMA_UID
              value: {{ default (default "" $eas.schemaUid) .Values.eas.schemaUid | quote }}
            - name: GAS_TOP_UP_THRESHOLD_USD
              value: {{ .Values.gasTopUpThresholdUsd | quote }}
            - name: TREASURY_ADDRESS
              value: {{ default "" $contracts.treasury | quote }}
          envFrom:
            - secretRef:
                name: {{ default (printf "%s-runtime" (include "paymaster-supervisor.fullname" .)) $secrets.runtimeSecretName }}
            {{- range .Values.extraEnvFrom }}
            - {{ toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: kms-secrets
              mountPath: /var/run/secrets/kms
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: kms-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ default "" $secrets.secretProviderClass | quote }}
