{{- $global := .Values.global | default (dict) -}}
{{- $chain := (index $global "chain") | default (dict) -}}
{{- $contracts := (index $global "contracts") | default (dict) -}}
{{- $cors := (index $global "cors") | default (dict) -}}
{{- $ratelimits := (index $global "ratelimits") | default (dict) -}}
{{- $rpc := (default (index $chain "rpcURLs") .Values.env.extra.rpcURLs) | default (list) -}}
{{- $fallbackRpc := (default (index $chain "fallbackRPCURLs") .Values.env.extra.fallbackRPCURLs) | default (list) -}}
{{- $allowedOrigins := (default (index $cors "allowedOrigins") .Values.env.cors.allowedOrigins) | default (list) -}}
{{- $allowedMethods := (default (index $cors "allowedMethods") .Values.env.cors.allowedMethods) | default (list) -}}
{{- $allowedHeaders := (default (index $cors "allowedHeaders") .Values.env.cors.allowedHeaders) | default (list) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrator.fullname" . }}
  labels:
    {{- include "orchestrator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "orchestrator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "orchestrator.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ default (include "orchestrator.fullname" .) .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: orchestrator
          image: {{ include "orchestrator.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: LOG_LEVEL
              value: {{ .Values.env.logLevel | quote }}
            - name: CHAIN_ID
              value: {{ default (index $chain "id") .Values.env.extra.chainId | quote }}
            - name: RPC_URLS
              value: {{ join "," $rpc | quote }}
            - name: FALLBACK_RPC_URLS
              value: {{ join "," $fallbackRpc | quote }}
            - name: BUNDLER_ADDRESS
              value: {{ default (index $contracts "bundler") .Values.env.extra.bundler | quote }}
            - name: PAYMASTER_ADDRESS
              value: {{ default (index $contracts "paymaster") .Values.env.extra.paymaster | quote }}
            - name: EAS_REGISTRY
              value: {{ default (index $contracts "easRegistry") .Values.env.extra.easRegistry | quote }}
            - name: EAS_SCHEMA_UID
              value: {{ default (index $contracts "easSchemaUID") .Values.env.extra.easSchemaUID | quote }}
            - name: ALLOWED_ORIGINS
              value: {{ join "," $allowedOrigins | quote }}
            - name: ALLOWED_METHODS
              value: {{ join "," $allowedMethods | quote }}
            - name: ALLOWED_HEADERS
              value: {{ join "," $allowedHeaders | quote }}
            - name: MAX_REQUEST_BYTES
              value: {{ .Values.env.maxRequestBytes | quote }}
            - name: RATE_LIMIT_RPS
              value: {{ default (index $ratelimits "requestsPerSecond") .Values.env.ratelimits.requestsPerSecond | quote }}
            - name: RATE_LIMIT_BURST
              value: {{ default (index $ratelimits "burst") .Values.env.ratelimits.burst | quote }}
          envFrom:
            {{- range .Values.secretRefs }}
            - secretRef:
                name: {{ . }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.probe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: {{ .Values.probe.port }}
            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: {{ .Values.probe.port }}
            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.periodSeconds }}
          {{- end }}
