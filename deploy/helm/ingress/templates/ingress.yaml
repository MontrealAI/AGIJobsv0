{{- $global := .Values.global | default (dict) -}}
{{- $ingress := (index $global "ingress") | default (dict) -}}
{{- $annotations := deepCopy (.Values.annotations | default (dict)) -}}
{{- $host := .Values.host | default (index $ingress "host") -}}
{{- $className := .Values.className | default (index $ingress "className") -}}
{{- $tls := .Values.tls | default (index $ingress "tls") | default (dict) -}}
{{- if and .Values.rateLimit.enabled (not (hasKey $annotations "nginx.ingress.kubernetes.io/limit-rps")) -}}
{{- $_ := set $annotations "nginx.ingress.kubernetes.io/limit-rps" (toString (div .Values.rateLimit.requestsPerMinute 60)) -}}
{{- end -}}
{{- if and .Values.rateLimit.enabled (not (hasKey $annotations "nginx.ingress.kubernetes.io/limit-burst")) -}}
{{- $_ := set $annotations "nginx.ingress.kubernetes.io/limit-burst" (toString .Values.rateLimit.burst) -}}
{{- end -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "ingress.fullname" . }}
  labels:
    {{- include "ingress.labels" . | nindent 4 }}
  {{- if $annotations }}
  annotations:
    {{- toYaml $annotations | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ $className | quote }}
  {{- if (and ($tls.enabled | default false) $host) }}
  tls:
    - hosts:
        - {{ $host | quote }}
      secretName: {{ $tls.secretName | quote }}
  {{- end }}
  rules:
    - host: {{ $host | quote }}
      http:
        paths:
          {{- range .Values.serviceTargets }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ printf "%s-%s" $.Release.Name .name }}
                port:
                  number: {{ .port }}
          {{- end }}
