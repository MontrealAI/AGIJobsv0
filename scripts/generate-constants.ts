import * as fs from 'fs';
import * as path from 'path';

const configPath = path.join(__dirname, '..', 'config', 'agialpha.json');
const { address, decimals, burnAddress } = JSON.parse(
  fs.readFileSync(configPath, 'utf8')
) as {
  address: string;
  decimals: number;
  burnAddress: string;
};

// Compute the token scale (10 ** decimals) using BigInt to avoid precision loss.
const scale = BigInt(10) ** BigInt(decimals);

const content = `// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\n// Shared AGI Jobs v2 constants.\n// @dev Auto-generated by scripts/generate-constants.ts\n// Canonical $AGIALPHA token on Ethereum mainnet.\naddress constant AGIALPHA = ${address};\n\n// Standard decimals for $AGIALPHA.\nuint8 constant AGIALPHA_DECIMALS = ${decimals};\n\n// Base unit scaling factor for $AGIALPHA (10 ** decimals).\nuint256 constant TOKEN_SCALE = ${scale};\n\n// Address used for burning tokens.\naddress constant BURN_ADDRESS = ${burnAddress};\n`;

const outPath = path.join(__dirname, '..', 'contracts', 'v2', 'Constants.sol');
fs.writeFileSync(outPath, content);
console.log(`Generated ${outPath}`);
